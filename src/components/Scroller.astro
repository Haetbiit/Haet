---
const scrolloptions = ["HTML", "CSS", "JS", "SSG", "webdev", "animation", "UI/UX"];
---
<script>
const scrollers = document.querySelectorAll(".scroller");

// If a user hasn't opted in for reduced motion, then we add the animation
if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
  addAnimation();
}

function addAnimation() {
  scrollers.forEach((scroller) => {
    // Explicitly type scroller as HTMLElement or Element
    const scrollerElement = scroller as HTMLElement; // or Element

    // add data-animated="true" to every `.scroller` on the page
    scrollerElement.setAttribute("data-animated", "true");

    // Make an array from the elements within `.scroller-inner`
    const scrollerInner = scrollerElement.querySelector(".scroller__inner");
    const scrollerContent = Array.from(scrollerInner?.children || []);

    // For each item in the array, clone it
    // add aria-hidden to it
    // add it into the `.scroller-inner`
    scrollerContent.forEach((item) => {
      const duplicatedItem = item.cloneNode(true);
      const duplicatedElement = duplicatedItem as HTMLElement; // or Element
      duplicatedElement.setAttribute("aria-hidden", "true");
      scrollerInner?.appendChild(duplicatedItem);
    });
  });
}
</script>

<h1 style="text-align: center">Infinite Scroll Animation</h1>

<div class="scroller" data-speed="fast">
  <ul class="tag-list scroller__inner">
    {scrolloptions.map((p: any) => 
         <li>{p}</li>
     )}
  </ul>
</div>

<style>.scroller {
    max-width: 600px;
    margin: auto;
  }
  
  .scroller__inner {
    padding-block: 1rem;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }
  
  .scroller[data-animated="true"] {
    overflow: hidden;
    -webkit-mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
    mask: linear-gradient(90deg, transparent, white 20%, white 80%, transparent);
  }
  
  .scroller[data-animated="true"] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration, 40s)
      var(--_animation-direction, forwards) linear infinite;
  }
  
  .scroller[data-direction="right"] {
    --_animation-direction: reverse;
  }
  
  .scroller[data-direction="left"] {
    --_animation-direction: forwards;
  }
  
  .scroller[data-speed="fast"] {
    --_animation-duration: 20s;
  }
  
  .scroller[data-speed="slow"] {
    --_animation-duration: 60s;
  }
  
  @keyframes scroll {
    to {
      transform: translate(calc(-50% - 0.5rem));
    }
  }</style>